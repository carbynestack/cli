#
# Copyright (c) 2021 - for information on the respective copyright owner
# see the NOTICE file and/or the repository https://github.com/carbynestack/cli.
#
# SPDX-License-Identifier: Apache-2.0
#
name: Publish and release
on:
  workflow_run:
    workflows: ["Build and test artifacts"]
    branches:
      - master
    types:
      - completed
  workflow_dispatch:

jobs:
  prepare:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-20.04
    outputs:
      VERSION: "${{ steps.maven-project.outputs.version }}-${{ github.run_id }}-${{ github.run_number }}-${{ steps.short-sha.outputs.sha }}"
    steps:
      - name: Parse short sha
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
      - uses: actions/checkout@v2
      - name: Get Maven project version
        run: echo ::set-output name=version::$(cat pom.xml| grep -m 1 -E "<version>(.*)</version>" | sed 's/.*<.*>\(.*\)<\/.*>/\1/g')
        id: maven-project
  draft-release:
    runs-on: ubuntu-20.04
    needs: [prepare]
    env:
      VERSION: "${{ needs.prepare.outputs.VERSION }}"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Retrieve license obligation resources
        run: |
          cd 3RD-PARTY-LICENSES
          find . -maxdepth 1 -type d -not -path . | zip -r@ ${GITHUB_REPOSITORY#*/}-3rd-party-copyrights
          find . -iname origin.src | \
          awk '{ \
          split($0,b,"/"); \
          system("xargs < " $0 " curl --create-dirs -Lo ./sources/" b[2] ".zip " $2)}' && \
          find -regex './sources$' | awk '{system("zip -jr ./${GITHUB_REPOSITORY#*/}-3rd-party-sources.zip " $0)}'
          mkdir -p ../license-obligations && mv `find . -regex "^./${GITHUB_REPOSITORY#*/}-3rd-party-.*.zip$"` ../license-obligations/
          cd -
      - name: Generate change log
        run: |
          chmod +x .github/scripts/generate-changelog.sh
          ./.github/scripts/generate-changelog.sh
      - name: Create release tag
        run: |
          git tag ${{ env.VERSION }}
          git push --tags
      - name: Create draft
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          draft: true
          bodyFile: /tmp/cs.repository-changelog.${{ env.VERSION }}
          artifacts: "license-obligations/*"
  publish:
    runs-on: ubuntu-20.04
    needs: [prepare,draft-release]
    env:
      VERSION: "${{ needs.prepare.outputs.VERSION }}"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
      - name: Setting up Github Package Repository as Maven Repository
        uses: s4u/maven-settings-action@v2
        with:
          githubServer: false
          servers: |
            [{
              "id": "github",
              "username": "${{ secrets.GHPR_USERNAME }}",
              "password": "${{ secrets.GHPR_TOKEN }}"
            }]
      - name: Update Maven project version
        run: mvn versions:set -DnewVersion=${{ env.VERSION }} -DprocessAllModules -DgenerateBackupPoms=false
      - name: Build artifact
        run: mvn package -Dskip.tests --batch-mode --no-transfer-progress
      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          allowUpdates: true
          draft: false
          omitBodyDuringUpdate: true
          artifacts: "target/cli-${{ env.VERSION }}-jar-with-dependencies.jar"
