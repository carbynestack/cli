#
# Copyright (c) 2021 - for information on the respective copyright owner
# see the NOTICE file and/or the repository https://github.com/carbynestack/cli.
#
# SPDX-License-Identifier: Apache-2.0
#
client-instantiation-failed=Failed to create Amphora client
client-description=Create and retrieve secrets from Amphora service(s)
client-exception=An error occurred during communication with Amphora service: {0}
option.help-description=Displays this help message
create.command-description=Creates a new Amphora secret with the given secret data.
create.parameter.secret-description=SECRET [SECRET... (type: Long)] \n\n\
                        \t\t\tAlthough it is mandatory to define at least one secret to be\n\
                        \t\t\tshared within the new secret, secrets might also be passed on\n\
                        \t\t\tStdIn (separated by new line) if omitted on command.\n
create.option.secretid-description=UUID which will be used as unique identifier to store the secret.\n\
                        \t\t\tDefault: <Random UUID>
create.option.tag-description=A Tag that will be added to the given secret.\n\
                        \t\t\tFormat: <KEY>=<VALUE>
create.info.insert-secrets=Insert secrets (one value per line). Press Ctrl+D to submit.
create.failure.read-secrets=No secrets provided.
create.log.success=Secret successfully created with ID: {0}
get.command-description=Retrieve an secret from Amphora
get.parameter.secretid-description=SECRET_ID
get.log.success=Received secret: {}
list.command-description=Lists all Secrets stored on the given Amphora service(s).
list.option.ids-only=Output secret IDs only
list.option.tag-filter-description=Filter secrets based on their tags and the criteria provided.\n\
                        \t\tWhen multiple filters are defined, they are joined via AND.\n\
                        \t\tCan be in one of the following formats:\n\
                        \t\t\t- key:value EQUAL Match\n\
                        \t\t\t- key>value GREATER THAN (Assumes tag value is a numeric value)\n\
                        \t\t\t- key<value LESS THAN (Assumes tag value is a numeric value)
list.option.sort-by-description=Sort output by given tag key.\n\
                        \t\tFormat: <KEY>:[ASC|DESC]\n\
                        \t\tExamples:\n\
                        \t\t\ttype:ASC\n\
                        \t\t\tcreation-date:DESC
list.failure.invalid-sort-format=Invalid sorting criteria: {0}
list.failure.invalid-tag-filter=Unable to parse tag-filter: {0}
list.log.success=Received secret list: {0}
tag.conversion.exception.format=Invalid Tag definition format. Format must match the following pattern: <KEY>=<VALUE>.p
create-tag.command-description=Adds a new Tag to the given Amphora secret
create-tag.option.secret-id-description=ID of the secret for which the tag will be created
create-tag.parameter.tag-description=TAG\n\n\
                         \t\t\tTag format: <KEY>=<VALUE>\n
create-tag.log.success=Created tag {0}={1} for secret with id {2}
create-tag.print.success=Tag created
get-tags.command-description=Retrieve all tags of an secret from Amphora
get-tags.parameter.secret-id-description=SECRET_ID
get-tags.log.success=Received tags: {0}
overwrite-tags.command-description=Replace all tags of an secret with new tags
overwrite-tags.option.secret-id-description=ID of the related Amphora secret
overwrite-tags.parameter.tag-description=TAG [TAG...]\n\n\
                          \t\t\tTag format: <KEY>=<VALUE>\n
overwrite-tags.log.success=Replaced existing tags at secret with id {0}
overwrite-tags.print.success=Tags replaced
get-tag.command-description=Retrieve a tag of an secret from Amphora
get-tag.option.secret-id-description=ID of the related Amphora secret
get-tag.parameter.tag-key-description=TAG_KEY
get-tag.log.success=Received tags: {0}
update-tag.command-description=Updates the value of an secret's tag. If a tag with the\n\
                          \t\t\t\t\tsame key is not already present at the secret, it\n\
                          \t\t\t\t\twill be created.
update-tag.option.secret-id-description=ID of the related Amphora secret
update-tag.parameter.tag-description=TAG\n\n\
                          \t\t\tTag format: <KEY>=<VALUE>\n
update-tag.log.success=Updated tag {0}={1} for secret with id {2}
update-tag.print.success=Tag updated
delete-tag.command-description=Delete a tag from an secret from Amphora
delete-tag.option.secret-id-description=ID of the Amphora secret
delete-tag.parameter.tag-key-description=TAG_KEY
delete-tag.log.success=Deleted tag with key {0} for secret with id {1}
delete-tag.print.success=Tag deleted
delete-secret.command-description=Delete an secret from Amphora
delete-secret.parameter.secret-id-description=SECRET_ID [SECRET_ID...]\n\n\
                        \t\t\tAlthough it is mandatory to define at least one Secret-ID to be\n\
                        \t\t\tdeleted, IDs might also be passed on StdIn (separated by new line)\n\
                        \t\t\t if omitted on command.\n
delete-secret.print.success-id=Success - Deleted secret with id {0}
delete-secret.print.fail-id=Fail - Unable to delete secret with id {0}. Reason: {1}
delete-secret.print.fail-unexp-id=Fail - Unable to delete secret with id {0}. Unexpected Reason: {1}
delete-secret.print.success-all=All Secrets deleted
delete-secret.info.secret-ids=Insert UUIDs to delete (one value per line). Press Ctrl+D to submit
delete-secret.failure.secret-ids=Failed to read valid UUIDs
